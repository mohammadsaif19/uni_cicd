name: "Build, release, and notify to slack workflow"

on:
  workflow_call:
    inputs:
      #* Specifing the version of flutter
      flutterVersion:
        required: false
        type: string
        default: "3.16.9"
      #* Title of the Slack message
      title:
        required: false
        type: string
        default: "Hello QA Team :wave:, Now it's time to show your magic :magic_wand:"
      #* Footer of the Slack message
      footer:
        required: false
        type: string
        default: "Release update notify message sent by UniBot"

      #* Specifing the cmd to build the apk from flutter
      buildCommand:
        required: false
        type: string
        default: flutter build apk

      #* Specifing the build path of release from flutter
      buildReleasePath:
        required: false
        type: string
        default: "build/app/outputs/apk/release"

      #* Specifing apk name from release
      releaseApkName:
        required: false
        type: string
        default: "app-release.apk"

    #* Secrets tokens to perform the action
    secrets:
      #* Github access token of user who have access to the repo
      token:
        required: true
        # type: string

      #* Webhook URL of Slack
      slack_webhook_url:
        required: true
        # type: string

      #* Token of the Slack Bot app
      slack_token:
        required: true
        # type: string

      #* Channel ID to send the message
      slack_channel_id:
        required: true
        # type: string
jobs:
  build:
    runs-on: ubuntu-latest

    #* Downloading JAVA and checkout the action v1 from github
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      #* Downloading flutter to ubuntu machine
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{inputs.flutterVersion}}

      #* Building Apk file
      - run: flutter pub get
      - run: ${{inputs.buildCommand}}

      #* Release it to artifacts
      - name: Release the apk to artifacts
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{inputs.buildReleasePath}}/*
          tag: v1.0.${{ github.run_number }}
          token: ${{secrets.token}}

      #* Sending Slack message to channcel
      - name: Notify Slack on new release
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_USERNAME: uniBot
          SLACK_TITLE: ${{inputs.title}}
          SLACK_MESSAGE: New Release from *${{ github.event.repository.name }}* project by *${{ github.event.head_commit.committer.name }}* and release note is `${{ github.event.head_commit.message }}` is now available to test.
          SLACK_FOOTER: ${{inputs.footer}}
          MSG_MINIMAL: event,commit
          SLACK_WEBHOOK: ${{secrets.slack_webhook_url}}

      #* Uploading apk to Slack channcel
      - uses: MeilCli/slack-upload-file@v3
        with:
          slack_token: ${{secrets.slack_token}}
          channel_id: ${{secrets.slack_channel_id}}
          file_path: ${{inputs.buildReleasePath}}/${{inputs.releaseApkName}}
